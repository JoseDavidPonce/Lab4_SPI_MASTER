

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 19 16:31:31 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0000                     	;# 
   288  0001                     	;# 
   289  0002                     	;# 
   290  0003                     	;# 
   291  0004                     	;# 
   292  0005                     	;# 
   293  0006                     	;# 
   294  0007                     	;# 
   295  0008                     	;# 
   296  0009                     	;# 
   297  000A                     	;# 
   298  000B                     	;# 
   299  000C                     	;# 
   300  000D                     	;# 
   301  000E                     	;# 
   302  000E                     	;# 
   303  000F                     	;# 
   304  0010                     	;# 
   305  0011                     	;# 
   306  0012                     	;# 
   307  0013                     	;# 
   308  0014                     	;# 
   309  0015                     	;# 
   310  0015                     	;# 
   311  0016                     	;# 
   312  0017                     	;# 
   313  0018                     	;# 
   314  0019                     	;# 
   315  001A                     	;# 
   316  001B                     	;# 
   317  001B                     	;# 
   318  001C                     	;# 
   319  001D                     	;# 
   320  001E                     	;# 
   321  001F                     	;# 
   322  0081                     	;# 
   323  0085                     	;# 
   324  0086                     	;# 
   325  0087                     	;# 
   326  0088                     	;# 
   327  0089                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0094                     	;# 
   339  0095                     	;# 
   340  0096                     	;# 
   341  0097                     	;# 
   342  0098                     	;# 
   343  0099                     	;# 
   344  009A                     	;# 
   345  009B                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  0105                     	;# 
   351  0107                     	;# 
   352  0108                     	;# 
   353  0109                     	;# 
   354  010C                     	;# 
   355  010C                     	;# 
   356  010D                     	;# 
   357  010E                     	;# 
   358  010F                     	;# 
   359  0185                     	;# 
   360  0187                     	;# 
   361  0188                     	;# 
   362  0189                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365                           
   366                           	psect	idataCOMMON
   367  0123                     __pidataCOMMON:	
   368                           
   369                           ;initializer for _pot2
   370  0123  3401               	retlw	1
   371  0018                     _RCSTAbits	set	24
   372  000B                     _INTCONbits	set	11
   373  0014                     _SSPCONbits	set	20
   374  0006                     _PORTB	set	6
   375  0019                     _TXREG	set	25
   376  001A                     _RCREG	set	26
   377  0013                     _SSPBUF	set	19
   378  000C                     _PIR1bits	set	12
   379  0099                     _SPBRG	set	153
   380  0098                     _TXSTAbits	set	152
   381  008C                     _PIE1bits	set	140
   382  0085                     _TRISAbits	set	133
   383  0094                     _SSPSTATbits	set	148
   384  0087                     _TRISCbits	set	135
   385  0086                     _TRISB	set	134
   386  0187                     _BAUDCTLbits	set	391
   387  0189                     _ANSELH	set	393
   388  0188                     _ANSEL	set	392
   389                           
   390                           ; #config settings
   391  0000                     
   392                           	psect	cinit
   393  0011                     start_initialization:	
   394  0011                     __initialization:	
   395                           
   396                           ; Initialize objects allocated to COMMON
   397  0011  120A  118A  2123  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   398  0016  00F9               	movwf	__pdataCOMMON& (0+127)
   399                           
   400                           ; Clear objects allocated to COMMON
   401  0017  01F5               	clrf	__pbssCOMMON& (0+127)
   402  0018  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   403  0019  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   404  001A  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   405  001B                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  001B                     __end_of__initialization:	
   409  001B  0183               	clrf	3
   410  001C  120A  118A  28E8   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413  0075                     __pbssCOMMON:	
   414  0075                     _nodatotx:	
   415  0075                     	ds	1
   416  0076                     _alternancia:	
   417  0076                     	ds	1
   418  0077                     _pot1:	
   419  0077                     	ds	1
   420  0078                     _contador:	
   421  0078                     	ds	1
   422                           
   423                           	psect	dataCOMMON
   424  0079                     __pdataCOMMON:	
   425  0079                     _pot2:	
   426  0079                     	ds	1
   427                           
   428                           	psect	cstackCOMMON
   429  0070                     __pcstackCOMMON:	
   430  0070                     ?_Port_Init:	
   431  0070                     ?_Init_SPI_int:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_isr:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ??_isr:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443                           
   444                           ; 1 bytes @ 0x0
   445  0070                     	ds	5
   446                           
   447                           	psect	cstackBANK0
   448  0020                     __pcstackBANK0:	
   449  0020                     ??_Port_Init:	
   450  0020                     ?_Init_SPI:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0020                     ??_Init_SPI_int:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0020                     ?_EUSART_Init:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0020                     Init_SPI@just_one_slave:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0020                     EUSART_Init@b:	
   463                           ; 1 bytes @ 0x0
   464                           
   465                           
   466                           ; 1 bytes @ 0x0
   467  0020                     	ds	1
   468  0021                     ??_Init_SPI:	
   469  0021                     ??_EUSART_Init:	
   470                           ; 1 bytes @ 0x1
   471                           
   472  0021                     Init_SPI@a:	
   473                           ; 1 bytes @ 0x1
   474                           
   475  0021                     EUSART_Init@a:	
   476                           ; 1 bytes @ 0x1
   477                           
   478                           
   479                           ; 1 bytes @ 0x1
   480  0021                     	ds	1
   481  0022                     ??_main:	
   482                           
   483                           	psect	maintext
   484  00E8                     __pmaintext:	
   485                           ; 1 bytes @ 0x2
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 68 in file "Main_MASTER.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : B00/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0
   508 ;;      Totals:         0       0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels required when called:    2
   511 ;; This function calls:
   512 ;;		_EUSART_Init
   513 ;;		_Init_SPI
   514 ;;		_Init_SPI_int
   515 ;;		_Port_Init
   516 ;; This function is called by:
   517 ;;		Startup code after reset
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           
   522                           ;psect for function _main
   523  00E8                     _main:	
   524  00E8                     l966:	
   525                           ;incstack = 0
   526                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   527                           
   528                           
   529                           ;Main_MASTER.c: 69:     Port_Init();
   530  00E8  120A  118A  210F  120A  118A  	fcall	_Port_Init
   531  00ED                     l968:	
   532                           
   533                           ;Main_MASTER.c: 70:     Init_SPI(1,1);
   534  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   535  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   536  00EF  01A0               	clrf	Init_SPI@just_one_slave
   537  00F0  0AA0               	incf	Init_SPI@just_one_slave,f
   538  00F1  3001               	movlw	1
   539  00F2  120A  118A  2071  120A  118A  	fcall	_Init_SPI
   540  00F7                     l970:	
   541                           
   542                           ;Main_MASTER.c: 71:     Init_SPI_int();
   543  00F7  120A  118A  211A  120A  118A  	fcall	_Init_SPI_int
   544                           
   545                           ;Main_MASTER.c: 72:     EUSART_Init(1,1);
   546  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   547  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   548  00FE  01A0               	clrf	EUSART_Init@b
   549  00FF  0AA0               	incf	EUSART_Init@b,f
   550  0100  3001               	movlw	1
   551  0101  120A  118A  20B1  120A  118A  	fcall	_EUSART_Init
   552  0106                     l972:	
   553                           
   554                           ;Main_MASTER.c: 73:     SSPBUF = 0;
   555  0106  1283               	bcf	3,5	;RP0=0, select bank0
   556  0107  1303               	bcf	3,6	;RP1=0, select bank0
   557  0108  0193               	clrf	19	;volatile
   558  0109                     l974:	
   559                           
   560                           ;Main_MASTER.c: 75:         PORTB = contador;
   561  0109  0878               	movf	_contador,w
   562  010A  0086               	movwf	6	;volatile
   563  010B  2909               	goto	l974
   564  010C  120A  118A  280E   	ljmp	start
   565  010F                     __end_of_main:	
   566                           
   567                           	psect	text1
   568  010F                     __ptext1:	
   569 ;; *************** function _Port_Init *****************
   570 ;; Defined at:
   571 ;;		line 79 in file "Main_MASTER.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;                  1    wreg      void 
   578 ;; Registers used:
   579 ;;		status,2
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         0       0       0       0       0
   587 ;;      Temps:          0       0       0       0       0
   588 ;;      Totals:         0       0       0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used:    1
   591 ;; Hardware stack levels required when called:    1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           
   600                           ;psect for function _Port_Init
   601  010F                     _Port_Init:	
   602  010F                     l932:	
   603                           ;incstack = 0
   604                           ; Regs used in _Port_Init: [status,2]
   605                           
   606                           
   607                           ;Main_MASTER.c: 80:     ANSEL = 0;
   608  010F  1683               	bsf	3,5	;RP0=1, select bank3
   609  0110  1703               	bsf	3,6	;RP1=1, select bank3
   610  0111  0188               	clrf	8	;volatile
   611                           
   612                           ;Main_MASTER.c: 81:     ANSELH = 0;
   613  0112  0189               	clrf	9	;volatile
   614                           
   615                           ;Main_MASTER.c: 82:     TRISB = 0;
   616  0113  1683               	bsf	3,5	;RP0=1, select bank1
   617  0114  1303               	bcf	3,6	;RP1=0, select bank1
   618  0115  0186               	clrf	6	;volatile
   619                           
   620                           ;Main_MASTER.c: 83:     PORTB = 0;
   621  0116  1283               	bcf	3,5	;RP0=0, select bank0
   622  0117  1303               	bcf	3,6	;RP1=0, select bank0
   623  0118  0186               	clrf	6	;volatile
   624  0119                     l60:	
   625  0119  0008               	return
   626  011A                     __end_of_Port_Init:	
   627                           
   628                           	psect	text2
   629  011A                     __ptext2:	
   630 ;; *************** function _Init_SPI_int *****************
   631 ;; Defined at:
   632 ;;		line 49 in file "../Lab4_SPI/Lib_SPI.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;		None
   635 ;; Auto vars:     Size  Location     Type
   636 ;;		None
   637 ;; Return value:  Size  Location     Type
   638 ;;                  1    wreg      void 
   639 ;; Registers used:
   640 ;;		None
   641 ;; Tracked objects:
   642 ;;		On entry : 0/0
   643 ;;		On exit  : 0/0
   644 ;;		Unchanged: 0/0
   645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   646 ;;      Params:         0       0       0       0       0
   647 ;;      Locals:         0       0       0       0       0
   648 ;;      Temps:          0       0       0       0       0
   649 ;;      Totals:         0       0       0       0       0
   650 ;;Total ram usage:        0 bytes
   651 ;; Hardware stack levels used:    1
   652 ;; Hardware stack levels required when called:    1
   653 ;; This function calls:
   654 ;;		Nothing
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _Init_SPI_int
   662  011A                     _Init_SPI_int:	
   663  011A                     l952:	
   664                           ;incstack = 0
   665                           ; Regs used in _Init_SPI_int: []
   666                           
   667                           
   668                           ;../Lab4_SPI/Lib_SPI.c: 50:     INTCONbits.GIE = 1;
   669  011A  178B               	bsf	11,7	;volatile
   670                           
   671                           ;../Lab4_SPI/Lib_SPI.c: 51:     INTCONbits.PEIE = 1;
   672  011B  170B               	bsf	11,6	;volatile
   673                           
   674                           ;../Lab4_SPI/Lib_SPI.c: 52:     PIE1bits.SSPIE = 1;
   675  011C  1683               	bsf	3,5	;RP0=1, select bank1
   676  011D  1303               	bcf	3,6	;RP1=0, select bank1
   677  011E  158C               	bsf	12,3	;volatile
   678                           
   679                           ;../Lab4_SPI/Lib_SPI.c: 53:     PIR1bits.SSPIF = 0;
   680  011F  1283               	bcf	3,5	;RP0=0, select bank0
   681  0120  1303               	bcf	3,6	;RP1=0, select bank0
   682  0121  118C               	bcf	12,3	;volatile
   683  0122                     l86:	
   684  0122  0008               	return
   685  0123                     __end_of_Init_SPI_int:	
   686                           
   687                           	psect	text3
   688  0071                     __ptext3:	
   689 ;; *************** function _Init_SPI *****************
   690 ;; Defined at:
   691 ;;		line 15 in file "../Lab4_SPI/Lib_SPI.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  a               1    wreg     unsigned char 
   694 ;;  just_one_sla    1    0[BANK0 ] unsigned char 
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  a               1    1[BANK0 ] unsigned char 
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   706 ;;      Params:         0       1       0       0       0
   707 ;;      Locals:         0       1       0       0       0
   708 ;;      Temps:          0       0       0       0       0
   709 ;;      Totals:         0       2       0       0       0
   710 ;;Total ram usage:        2 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; Hardware stack levels required when called:    1
   713 ;; This function calls:
   714 ;;		Nothing
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           
   721                           ;psect for function _Init_SPI
   722  0071                     _Init_SPI:	
   723                           
   724                           ;incstack = 0
   725                           ; Regs used in _Init_SPI: [wreg+status,2+status,0]
   726                           ;Init_SPI@a stored from wreg
   727  0071  1283               	bcf	3,5	;RP0=0, select bank0
   728  0072  1303               	bcf	3,6	;RP1=0, select bank0
   729  0073  00A1               	movwf	Init_SPI@a
   730  0074                     l934:	
   731                           
   732                           ;../Lab4_SPI/Lib_SPI.c: 16:     TRISCbits.TRISC5 = 0;
   733  0074  1683               	bsf	3,5	;RP0=1, select bank1
   734  0075  1303               	bcf	3,6	;RP1=0, select bank1
   735  0076  1287               	bcf	7,5	;volatile
   736  0077                     l936:	
   737                           
   738                           ;../Lab4_SPI/Lib_SPI.c: 18:     if (a == 1){
   739  0077  1283               	bcf	3,5	;RP0=0, select bank0
   740  0078  1303               	bcf	3,6	;RP1=0, select bank0
   741  0079  0321               	decf	Init_SPI@a,w
   742  007A  1D03               	btfss	3,2
   743  007B  287D               	goto	u201
   744  007C  287E               	goto	u200
   745  007D                     u201:	
   746  007D  288C               	goto	l940
   747  007E                     u200:	
   748  007E                     l938:	
   749                           
   750                           ;../Lab4_SPI/Lib_SPI.c: 19:         TRISCbits.TRISC3 = 0;
   751  007E  1683               	bsf	3,5	;RP0=1, select bank1
   752  007F  1303               	bcf	3,6	;RP1=0, select bank1
   753  0080  1187               	bcf	7,3	;volatile
   754                           
   755                           ;../Lab4_SPI/Lib_SPI.c: 20:         SSPSTATbits.SMP = 0;
   756  0081  1394               	bcf	20,7	;volatile
   757                           
   758                           ;../Lab4_SPI/Lib_SPI.c: 21:         SSPSTATbits.CKE = 1;
   759  0082  1714               	bsf	20,6	;volatile
   760                           
   761                           ;../Lab4_SPI/Lib_SPI.c: 22:         SSPCONbits.SSPEN = 1;
   762  0083  1283               	bcf	3,5	;RP0=0, select bank0
   763  0084  1303               	bcf	3,6	;RP1=0, select bank0
   764  0085  1694               	bsf	20,5	;volatile
   765                           
   766                           ;../Lab4_SPI/Lib_SPI.c: 23:         SSPCONbits.CKP = 0;
   767  0086  1214               	bcf	20,4	;volatile
   768                           
   769                           ;../Lab4_SPI/Lib_SPI.c: 25:         SSPCONbits.SSPM0 = 0;
   770  0087  1014               	bcf	20,0	;volatile
   771                           
   772                           ;../Lab4_SPI/Lib_SPI.c: 26:         SSPCONbits.SSPM1 = 0;
   773  0088  1094               	bcf	20,1	;volatile
   774                           
   775                           ;../Lab4_SPI/Lib_SPI.c: 27:         SSPCONbits.SSPM2 = 0;
   776  0089  1114               	bcf	20,2	;volatile
   777                           
   778                           ;../Lab4_SPI/Lib_SPI.c: 28:         SSPCONbits.SSPM3 = 0;
   779  008A  1194               	bcf	20,3	;volatile
   780                           
   781                           ;../Lab4_SPI/Lib_SPI.c: 29:     }else if (a == 0){
   782  008B  28B0               	goto	l83
   783  008C                     l940:	
   784  008C  0821               	movf	Init_SPI@a,w
   785  008D  1D03               	btfss	3,2
   786  008E  2890               	goto	u211
   787  008F  2891               	goto	u210
   788  0090                     u211:	
   789  0090  28B0               	goto	l83
   790  0091                     u210:	
   791  0091                     l942:	
   792                           
   793                           ;../Lab4_SPI/Lib_SPI.c: 30:         TRISCbits.TRISC3 = 1;
   794  0091  1683               	bsf	3,5	;RP0=1, select bank1
   795  0092  1303               	bcf	3,6	;RP1=0, select bank1
   796  0093  1587               	bsf	7,3	;volatile
   797                           
   798                           ;../Lab4_SPI/Lib_SPI.c: 31:         SSPSTATbits.SMP = 0;
   799  0094  1394               	bcf	20,7	;volatile
   800                           
   801                           ;../Lab4_SPI/Lib_SPI.c: 32:         SSPSTATbits.CKE = 1;
   802  0095  1714               	bsf	20,6	;volatile
   803                           
   804                           ;../Lab4_SPI/Lib_SPI.c: 33:         SSPCONbits.SSPEN = 1;
   805  0096  1283               	bcf	3,5	;RP0=0, select bank0
   806  0097  1303               	bcf	3,6	;RP1=0, select bank0
   807  0098  1694               	bsf	20,5	;volatile
   808                           
   809                           ;../Lab4_SPI/Lib_SPI.c: 34:         SSPCONbits.CKP = 0;
   810  0099  1214               	bcf	20,4	;volatile
   811                           
   812                           ;../Lab4_SPI/Lib_SPI.c: 36:         SSPCONbits.SSPM1 = 0;
   813  009A  1094               	bcf	20,1	;volatile
   814                           
   815                           ;../Lab4_SPI/Lib_SPI.c: 37:         SSPCONbits.SSPM2 = 1;
   816  009B  1514               	bsf	20,2	;volatile
   817                           
   818                           ;../Lab4_SPI/Lib_SPI.c: 38:         SSPCONbits.SSPM3 = 0;
   819  009C  1194               	bcf	20,3	;volatile
   820  009D                     l944:	
   821                           
   822                           ;../Lab4_SPI/Lib_SPI.c: 39:         if (just_one_slave == 1){
   823  009D  0320               	decf	Init_SPI@just_one_slave,w
   824  009E  1D03               	btfss	3,2
   825  009F  28A1               	goto	u221
   826  00A0  28A2               	goto	u220
   827  00A1                     u221:	
   828  00A1  28A4               	goto	l948
   829  00A2                     u220:	
   830  00A2                     l946:	
   831                           
   832                           ;../Lab4_SPI/Lib_SPI.c: 40:             SSPCONbits.SSPM0 = 1;
   833  00A2  1414               	bsf	20,0	;volatile
   834                           
   835                           ;../Lab4_SPI/Lib_SPI.c: 41:         }else if (just_one_slave == 0){
   836  00A3  28B0               	goto	l83
   837  00A4                     l948:	
   838  00A4  0820               	movf	Init_SPI@just_one_slave,w
   839  00A5  1D03               	btfss	3,2
   840  00A6  28A8               	goto	u231
   841  00A7  28A9               	goto	u230
   842  00A8                     u231:	
   843  00A8  28B0               	goto	l79
   844  00A9                     u230:	
   845  00A9                     l950:	
   846                           
   847                           ;../Lab4_SPI/Lib_SPI.c: 42:             TRISAbits.TRISA5 = 1;
   848  00A9  1683               	bsf	3,5	;RP0=1, select bank1
   849  00AA  1303               	bcf	3,6	;RP1=0, select bank1
   850  00AB  1685               	bsf	5,5	;volatile
   851                           
   852                           ;../Lab4_SPI/Lib_SPI.c: 43:             SSPCONbits.SSPM0 = 0;
   853  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   854  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   855  00AE  1014               	bcf	20,0	;volatile
   856  00AF  28B0               	goto	l83
   857  00B0                     l79:	
   858                           ;../Lab4_SPI/Lib_SPI.c: 46:     }
   859                           
   860  00B0                     l83:	
   861  00B0  0008               	return
   862  00B1                     __end_of_Init_SPI:	
   863                           
   864                           	psect	text4
   865  00B1                     __ptext4:	
   866 ;; *************** function _EUSART_Init *****************
   867 ;; Defined at:
   868 ;;		line 5 in file "../Digital2_LabLCD/Lib_EUSART.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  a               1    wreg     unsigned char 
   871 ;;  b               1    0[BANK0 ] unsigned char 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  a               1    1[BANK0 ] unsigned char 
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       1       0       0       0
   884 ;;      Locals:         0       1       0       0       0
   885 ;;      Temps:          0       0       0       0       0
   886 ;;      Totals:         0       2       0       0       0
   887 ;;Total ram usage:        2 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _EUSART_Init
   899  00B1                     _EUSART_Init:	
   900                           
   901                           ;incstack = 0
   902                           ; Regs used in _EUSART_Init: [wreg+status,2+status,0]
   903                           ;EUSART_Init@a stored from wreg
   904  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   905  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   906  00B3  00A1               	movwf	EUSART_Init@a
   907  00B4                     l954:	
   908                           
   909                           ;../Digital2_LabLCD/Lib_EUSART.c: 7:     BAUDCTLbits.BRG16 = 0;
   910  00B4  1683               	bsf	3,5	;RP0=1, select bank3
   911  00B5  1703               	bsf	3,6	;RP1=1, select bank3
   912  00B6  1187               	bcf	7,3	;volatile
   913                           
   914                           ;../Digital2_LabLCD/Lib_EUSART.c: 8:     TXSTAbits.BRGH = 1;
   915  00B7  1683               	bsf	3,5	;RP0=1, select bank1
   916  00B8  1303               	bcf	3,6	;RP1=0, select bank1
   917  00B9  1518               	bsf	24,2	;volatile
   918                           
   919                           ;../Digital2_LabLCD/Lib_EUSART.c: 9:     TXSTAbits.SYNC = 0;
   920  00BA  1218               	bcf	24,4	;volatile
   921                           
   922                           ;../Digital2_LabLCD/Lib_EUSART.c: 10:     RCSTAbits.SPEN = 1;
   923  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   924  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   925  00BD  1798               	bsf	24,7	;volatile
   926                           
   927                           ;../Digital2_LabLCD/Lib_EUSART.c: 11:     TRISCbits.TRISC7 = 1;
   928  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   929  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   930  00C0  1787               	bsf	7,7	;volatile
   931  00C1                     l956:	
   932                           
   933                           ;../Digital2_LabLCD/Lib_EUSART.c: 12:     SPBRG = 25;
   934  00C1  3019               	movlw	25
   935  00C2  0099               	movwf	25	;volatile
   936  00C3                     l958:	
   937                           
   938                           ;../Digital2_LabLCD/Lib_EUSART.c: 13:     if (a==1){
   939  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   940  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   941  00C5  0321               	decf	EUSART_Init@a,w
   942  00C6  1D03               	btfss	3,2
   943  00C7  28C9               	goto	u241
   944  00C8  28CA               	goto	u240
   945  00C9                     u241:	
   946  00C9  28D2               	goto	l109
   947  00CA                     u240:	
   948  00CA                     l960:	
   949                           
   950                           ;../Digital2_LabLCD/Lib_EUSART.c: 14:         PIE1bits.RCIE = 1;
   951  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   952  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   953  00CC  168C               	bsf	12,5	;volatile
   954                           
   955                           ;../Digital2_LabLCD/Lib_EUSART.c: 15:         PIR1bits.RCIF = 0;
   956  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   957  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   958  00CF  128C               	bcf	12,5	;volatile
   959                           
   960                           ;../Digital2_LabLCD/Lib_EUSART.c: 16:         INTCONbits.GIE = 1;
   961  00D0  178B               	bsf	11,7	;volatile
   962                           
   963                           ;../Digital2_LabLCD/Lib_EUSART.c: 17:         INTCONbits.PEIE = 1;
   964  00D1  170B               	bsf	11,6	;volatile
   965  00D2                     l109:	
   966                           ;../Digital2_LabLCD/Lib_EUSART.c: 18:     }
   967                           
   968                           
   969                           ;../Digital2_LabLCD/Lib_EUSART.c: 19:     RCSTAbits.RX9D = 0;
   970  00D2  1018               	bcf	24,0	;volatile
   971                           
   972                           ;../Digital2_LabLCD/Lib_EUSART.c: 20:     RCSTAbits.CREN = 1;
   973  00D3  1618               	bsf	24,4	;volatile
   974                           
   975                           ;../Digital2_LabLCD/Lib_EUSART.c: 23:     TXSTAbits.TXEN = 1;
   976  00D4  1683               	bsf	3,5	;RP0=1, select bank1
   977  00D5  1303               	bcf	3,6	;RP1=0, select bank1
   978  00D6  1698               	bsf	24,5	;volatile
   979                           
   980                           ;../Digital2_LabLCD/Lib_EUSART.c: 24:     TRISCbits.TRISC6 = 0;
   981  00D7  1307               	bcf	7,6	;volatile
   982  00D8                     l962:	
   983                           
   984                           ;../Digital2_LabLCD/Lib_EUSART.c: 25:     if(b==1){
   985  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   986  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   987  00DA  0320               	decf	EUSART_Init@b,w
   988  00DB  1D03               	btfss	3,2
   989  00DC  28DE               	goto	u251
   990  00DD  28DF               	goto	u250
   991  00DE                     u251:	
   992  00DE  28E7               	goto	l111
   993  00DF                     u250:	
   994  00DF                     l964:	
   995                           
   996                           ;../Digital2_LabLCD/Lib_EUSART.c: 26:         PIE1bits.TXIE = 1;
   997  00DF  1683               	bsf	3,5	;RP0=1, select bank1
   998  00E0  1303               	bcf	3,6	;RP1=0, select bank1
   999  00E1  160C               	bsf	12,4	;volatile
  1000                           
  1001                           ;../Digital2_LabLCD/Lib_EUSART.c: 27:         PIR1bits.TXIF = 0;
  1002  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1003  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1004  00E4  120C               	bcf	12,4	;volatile
  1005                           
  1006                           ;../Digital2_LabLCD/Lib_EUSART.c: 28:         INTCONbits.GIE = 1;
  1007  00E5  178B               	bsf	11,7	;volatile
  1008                           
  1009                           ;../Digital2_LabLCD/Lib_EUSART.c: 29:         INTCONbits.PEIE = 1;
  1010  00E6  170B               	bsf	11,6	;volatile
  1011  00E7                     l111:	
  1012  00E7  0008               	return
  1013  00E8                     __end_of_EUSART_Init:	
  1014                           
  1015                           	psect	text5
  1016  001F                     __ptext5:	
  1017 ;; *************** function _isr *****************
  1018 ;; Defined at:
  1019 ;;		line 36 in file "Main_MASTER.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          5       0       0       0       0
  1036 ;;      Totals:         5       0       0       0       0
  1037 ;;Total ram usage:        5 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		Interrupt level 1
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           
  1047                           ;psect for function _isr
  1048  001F                     _isr:	
  1049  001F                     i1l756:	
  1050                           
  1051                           ;Main_MASTER.c: 37:     if (PIR1bits.SSPIF == 1){
  1052  001F  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0020  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0021  1D8C               	btfss	12,3	;volatile
  1055  0022  2824               	goto	u7_21
  1056  0023  2825               	goto	u7_20
  1057  0024                     u7_21:	
  1058  0024  283A               	goto	i1l772
  1059  0025                     u7_20:	
  1060  0025                     i1l758:	
  1061                           
  1062                           ;Main_MASTER.c: 38:         PIR1bits.SSPIF = 0;
  1063  0025  118C               	bcf	12,3	;volatile
  1064  0026                     i1l760:	
  1065                           
  1066                           ;Main_MASTER.c: 39:         if (alternancia == 0){
  1067  0026  0876               	movf	_alternancia,w
  1068  0027  1D03               	btfss	3,2
  1069  0028  282A               	goto	u8_21
  1070  0029  282B               	goto	u8_20
  1071  002A                     u8_21:	
  1072  002A  2834               	goto	i1l766
  1073  002B                     u8_20:	
  1074  002B                     i1l762:	
  1075                           
  1076                           ;Main_MASTER.c: 40:             pot1 = SSPBUF;
  1077  002B  0813               	movf	19,w	;volatile
  1078  002C  00F0               	movwf	??_isr
  1079  002D  0870               	movf	??_isr,w
  1080  002E  00F7               	movwf	_pot1
  1081                           
  1082                           ;Main_MASTER.c: 41:             SSPBUF = 0x01;
  1083  002F  3001               	movlw	1
  1084  0030  0093               	movwf	19	;volatile
  1085  0031                     i1l764:	
  1086                           
  1087                           ;Main_MASTER.c: 42:             alternancia = 1;
  1088  0031  01F6               	clrf	_alternancia
  1089  0032  0AF6               	incf	_alternancia,f
  1090                           
  1091                           ;Main_MASTER.c: 43:         }else{
  1092  0033  283A               	goto	i1l772
  1093  0034                     i1l766:	
  1094                           
  1095                           ;Main_MASTER.c: 44:             pot2 = SSPBUF;
  1096  0034  0813               	movf	19,w	;volatile
  1097  0035  00F0               	movwf	??_isr
  1098  0036  0870               	movf	??_isr,w
  1099  0037  00F9               	movwf	_pot2
  1100  0038                     i1l768:	
  1101                           
  1102                           ;Main_MASTER.c: 45:             SSPBUF = 0x00;
  1103  0038  0193               	clrf	19	;volatile
  1104  0039                     i1l770:	
  1105                           
  1106                           ;Main_MASTER.c: 46:             alternancia = 0;
  1107  0039  01F6               	clrf	_alternancia
  1108  003A                     i1l772:	
  1109  003A  1E8C               	btfss	12,5	;volatile
  1110  003B  283D               	goto	u9_21
  1111  003C  283E               	goto	u9_20
  1112  003D                     u9_21:	
  1113  003D  2842               	goto	i1l776
  1114  003E                     u9_20:	
  1115  003E                     i1l774:	
  1116                           
  1117                           ;Main_MASTER.c: 49:         contador = RCREG;
  1118  003E  081A               	movf	26,w	;volatile
  1119  003F  00F0               	movwf	??_isr
  1120  0040  0870               	movf	??_isr,w
  1121  0041  00F8               	movwf	_contador
  1122  0042                     i1l776:	
  1123  0042  1E0C               	btfss	12,4	;volatile
  1124  0043  2845               	goto	u10_21
  1125  0044  2846               	goto	u10_20
  1126  0045                     u10_21:	
  1127  0045  2868               	goto	i1l49
  1128  0046                     u10_20:	
  1129  0046  2855               	goto	i1l794
  1130  0047                     i1l780:	
  1131                           
  1132                           ;Main_MASTER.c: 53:                 TXREG = pot1;
  1133  0047  0877               	movf	_pot1,w
  1134  0048  0099               	movwf	25	;volatile
  1135  0049                     i1l782:	
  1136                           
  1137                           ;Main_MASTER.c: 54:                 nodatotx++;
  1138  0049  3001               	movlw	1
  1139  004A  00F0               	movwf	??_isr
  1140  004B  0870               	movf	??_isr,w
  1141  004C  07F5               	addwf	_nodatotx,f
  1142                           
  1143                           ;Main_MASTER.c: 55:                 break;
  1144  004D  2868               	goto	i1l49
  1145  004E                     i1l784:	
  1146                           
  1147                           ;Main_MASTER.c: 57:                 TXREG = pot2;
  1148  004E  0879               	movf	_pot2,w
  1149  004F  0099               	movwf	25	;volatile
  1150  0050  2849               	goto	i1l782
  1151  0051                     i1l788:	
  1152                           
  1153                           ;Main_MASTER.c: 61:                 TXREG = 0x42;
  1154  0051  3042               	movlw	66
  1155  0052  0099               	movwf	25	;volatile
  1156  0053                     i1l790:	
  1157                           
  1158                           ;Main_MASTER.c: 62:                 nodatotx = 0;
  1159  0053  01F5               	clrf	_nodatotx
  1160                           
  1161                           ;Main_MASTER.c: 63:                 break;
  1162  0054  2868               	goto	i1l49
  1163  0055                     i1l794:	
  1164  0055  0875               	movf	_nodatotx,w
  1165  0056  00F0               	movwf	??_isr
  1166  0057  01F1               	clrf	??_isr+1
  1167                           
  1168                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1169                           ; Switch size 1, requested type "simple"
  1170                           ; Number of cases is 1, Range of values is 0 to 0
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte            4     3 (average)
  1174                           ; direct_byte           11     8 (fixed)
  1175                           ; jumptable            260     6 (fixed)
  1176                           ;	Chosen strategy is simple_byte
  1177  0058  0871               	movf	??_isr+1,w
  1178  0059  3A00               	xorlw	0	; case 0
  1179  005A  1903               	skipnz
  1180  005B  285D               	goto	i1l1006
  1181  005C  2868               	goto	i1l49
  1182  005D                     i1l1006:	
  1183                           
  1184                           ; Switch size 1, requested type "simple"
  1185                           ; Number of cases is 3, Range of values is 0 to 2
  1186                           ; switch strategies available:
  1187                           ; Name         Instructions Cycles
  1188                           ; simple_byte           10     6 (average)
  1189                           ; direct_byte           17     8 (fixed)
  1190                           ; jumptable            260     6 (fixed)
  1191                           ;	Chosen strategy is simple_byte
  1192  005D  0870               	movf	??_isr,w
  1193  005E  3A00               	xorlw	0	; case 0
  1194  005F  1903               	skipnz
  1195  0060  2847               	goto	i1l780
  1196  0061  3A01               	xorlw	1	; case 1
  1197  0062  1903               	skipnz
  1198  0063  284E               	goto	i1l784
  1199  0064  3A03               	xorlw	3	; case 2
  1200  0065  1903               	skipnz
  1201  0066  2851               	goto	i1l788
  1202  0067  2868               	goto	i1l49
  1203  0068                     i1l49:	
  1204  0068  0874               	movf	??_isr+4,w
  1205  0069  008A               	movwf	10
  1206  006A  0873               	movf	??_isr+3,w
  1207  006B  0084               	movwf	4
  1208  006C  0E72               	swapf	(??_isr+2)^(0+4294967168),w
  1209  006D  0083               	movwf	3
  1210  006E  0EFE               	swapf	btemp,f
  1211  006F  0E7E               	swapf	btemp,w
  1212  0070  0009               	retfie
  1213  0071                     __end_of_isr:	
  1214  007E                     btemp	set	126	;btemp
  1215  007E                     wtemp0	set	126
  1216                           
  1217                           	psect	intentry
  1218  0004                     __pintentry:	
  1219                           ;incstack = 0
  1220                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1221                           
  1222  0004                     interrupt_function:	
  1223  007E                     saved_w	set	btemp
  1224  0004  00FE               	movwf	btemp
  1225  0005  0E03               	swapf	3,w
  1226  0006  00F2               	movwf	??_isr+2
  1227  0007  0804               	movf	4,w
  1228  0008  00F3               	movwf	??_isr+3
  1229  0009  080A               	movf	10,w
  1230  000A  00F4               	movwf	??_isr+4
  1231  000B  120A  118A  281F   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_EUSART_Init
    _main->_Init_SPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     366
                        _EUSART_Init
                           _Init_SPI
                       _Init_SPI_int
                          _Port_Init
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_SPI_int                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_SPI                                             2     1      1     214
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          2     1      1     152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Init
   _Init_SPI
   _Init_SPI_int
   _Port_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      2       2       5        2.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 19 16:31:31 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l60 0119  
                      l83 00B0                        l86 0122                        l79 00B0  
                     l111 00E7                       l109 00D2                       l940 008C  
                     l932 010F                       l950 00A9                       l942 0091  
                     l934 0074                       l960 00CA                       l944 009D  
                     l936 0077                       l952 011A                       l962 00D8  
                     l954 00B4                       l946 00A2                       l938 007E  
                     l970 00F7                       l964 00DF                       l956 00C1  
                     l948 00A4                       l972 0106                       l958 00C3  
                     l974 0109                       l966 00E8                       l968 00ED  
                     u200 007E                       u201 007D                       u210 0091  
                     u211 0090                       u220 00A2                       u221 00A1  
                     u230 00A9                       u231 00A8                       u240 00CA  
                     u241 00C9                       u250 00DF                       u251 00DE  
            __CFG_CPD$OFF 0000                       _isr 001F                       fsr0 0004  
            ?_EUSART_Init 0020              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    i1l49 0068                      u7_20 0025                      u7_21 0024  
                    u8_20 002B                      u8_21 002A                      u9_20 003E  
                    u9_21 003D              __CFG_WRT$OFF 0000                      _main 00E8  
                    _pot1 0077                      _pot2 0079             ?_Init_SPI_int 0070  
                    btemp 007E                      start 000E             __CFG_IESO$OFF 0000  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l760 0026                     i1l770 0039  
                   i1l762 002B                     i1l780 0047                     i1l764 0031  
                   i1l772 003A                     i1l756 001F                     i1l790 0053  
                   i1l782 0049                     i1l774 003E                     i1l766 0034  
                   i1l758 0025                     i1l784 004E                     i1l776 0042  
                   i1l768 0038                     i1l794 0055                     i1l788 0051  
                   _RCREG 001A                     u10_20 0046                     u10_21 0045  
                   _SPBRG 0099                     _PORTB 0006                     _TRISB 0086  
                   _TXREG 0019            __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000  
                   pclath 000A            ??_Init_SPI_int 0020                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 0011  
            __end_of_main 010F          __end_of_Init_SPI 00B1                    ??_main 0022  
                  _ANSELH 0189                    i1l1006 005D                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000              EUSART_Init@a 0021              EUSART_Init@b 0020  
            __pdataCOMMON 0079        __size_of_Port_Init 000B                    saved_w 007E  
    __size_of_EUSART_Init 0037   __end_of__initialization 001B    Init_SPI@just_one_slave 0020  
          __pcstackCOMMON 0070      __end_of_Init_SPI_int 0123                 ?_Init_SPI 0020  
       __end_of_Port_Init 011A                __pmaintext 00E8                __pintentry 0004  
              ??_Init_SPI 0021                   __ptext1 010F                   __ptext2 011A  
                 __ptext3 0071                   __ptext4 00B1                   __ptext5 001F  
            __size_of_isr 0052      end_of_initialization 001B                 _RCSTAbits 0018  
   __size_of_Init_SPI_int 0009                 _TRISAbits 0085                 _TRISCbits 0087  
               Init_SPI@a 0021                 _TXSTAbits 0098              _Init_SPI_int 011A  
           __pidataCOMMON 0123               _BAUDCTLbits 0187       start_initialization 0011  
             __end_of_isr 0071             ??_EUSART_Init 0021         __size_of_Init_SPI 0040  
__CFG_FOSC$INTRC_NOCLKOUT 0000                 _Port_Init 010F               __pbssCOMMON 0075  
               ___latbits 0002             __pcstackBANK0 0020       __end_of_EUSART_Init 00E8  
              ?_Port_Init 0070               _alternancia 0076         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C               _EUSART_Init 00B1  
                _Init_SPI 0071               ??_Port_Init 0020         __CFG_BOR4V$BOR40V 0000  
                _contador 0078             __size_of_main 0027                  _nodatotx 0075  
              _INTCONbits 000B                  intlevel1 0000                _SSPCONbits 0014  
