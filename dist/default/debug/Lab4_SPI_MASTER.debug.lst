

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 21 10:53:45 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0018                     _RCSTAbits	set	24
   364  000B                     _INTCONbits	set	11
   365  0014                     _SSPCONbits	set	20
   366  0006                     _PORTB	set	6
   367  0019                     _TXREG	set	25
   368  001A                     _RCREG	set	26
   369  0013                     _SSPBUF	set	19
   370  000C                     _PIR1bits	set	12
   371  0099                     _SPBRG	set	153
   372  0098                     _TXSTAbits	set	152
   373  008C                     _PIE1bits	set	140
   374  0085                     _TRISAbits	set	133
   375  0094                     _SSPSTATbits	set	148
   376  0087                     _TRISCbits	set	135
   377  0086                     _TRISB	set	134
   378  0187                     _BAUDCTLbits	set	391
   379  0189                     _ANSELH	set	393
   380  0188                     _ANSEL	set	392
   381                           
   382                           ; #config settings
   383  0000                     
   384                           	psect	cinit
   385  0011                     start_initialization:	
   386  0011                     __initialization:	
   387                           
   388                           ; Clear objects allocated to COMMON
   389  0011  01F0               	clrf	__pbssCOMMON& (0+127)
   390  0012  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   391  0013  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   392  0014  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   393  0015  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   394  0016                     end_of_initialization:	
   395                           ;End of C runtime variable initialization code
   396                           
   397  0016                     __end_of__initialization:	
   398  0016  0183               	clrf	3
   399  0017  120A  118A  28F7   	ljmp	_main	;jump to C main() function
   400                           
   401                           	psect	bssCOMMON
   402  0070                     __pbssCOMMON:	
   403  0070                     _nodatotx:	
   404  0070                     	ds	1
   405  0071                     _alternancia:	
   406  0071                     	ds	1
   407  0072                     _pot2:	
   408  0072                     	ds	1
   409  0073                     _pot1:	
   410  0073                     	ds	1
   411  0074                     _contador:	
   412  0074                     	ds	1
   413                           
   414                           	psect	cstackCOMMON
   415  0075                     __pcstackCOMMON:	
   416  0075                     ?_Port_Init:	
   417  0075                     ?_Init_SPI_int:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0075                     ?_isr:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0075                     ??_isr:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0075                     ?_main:	
   427                           ; 1 bytes @ 0x0
   428                           
   429                           
   430                           ; 1 bytes @ 0x0
   431  0075                     	ds	5
   432                           
   433                           	psect	cstackBANK0
   434  0020                     __pcstackBANK0:	
   435  0020                     ??_Port_Init:	
   436  0020                     ?_Init_SPI:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0020                     ??_Init_SPI_int:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0020                     ?_EUSART_Init:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0020                     Init_SPI@just_one_slave:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0020                     EUSART_Init@b:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 1 bytes @ 0x0
   453  0020                     	ds	1
   454  0021                     ??_Init_SPI:	
   455  0021                     ??_EUSART_Init:	
   456                           ; 1 bytes @ 0x1
   457                           
   458  0021                     Init_SPI@a:	
   459                           ; 1 bytes @ 0x1
   460                           
   461  0021                     EUSART_Init@a:	
   462                           ; 1 bytes @ 0x1
   463                           
   464                           
   465                           ; 1 bytes @ 0x1
   466  0021                     	ds	1
   467  0022                     ??_main:	
   468                           
   469                           	psect	maintext
   470  00F7                     __pmaintext:	
   471                           ; 1 bytes @ 0x2
   472 ;;
   473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   474 ;;
   475 ;; *************** function _main *****************
   476 ;; Defined at:
   477 ;;		line 74 in file "Main_MASTER.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : B00/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels required when called:    2
   497 ;; This function calls:
   498 ;;		_EUSART_Init
   499 ;;		_Init_SPI
   500 ;;		_Init_SPI_int
   501 ;;		_Port_Init
   502 ;; This function is called by:
   503 ;;		Startup code after reset
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           
   508                           ;psect for function _main
   509  00F7                     _main:	
   510  00F7                     l974:	
   511                           ;incstack = 0
   512                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   513                           
   514                           
   515                           ;Main_MASTER.c: 75:     Port_Init();
   516  00F7  120A  118A  211F  120A  118A  	fcall	_Port_Init
   517  00FC                     l976:	
   518                           
   519                           ;Main_MASTER.c: 76:     Init_SPI(1,1);
   520  00FC  1283               	bcf	3,5	;RP0=0, select bank0
   521  00FD  1303               	bcf	3,6	;RP1=0, select bank0
   522  00FE  01A0               	clrf	Init_SPI@just_one_slave
   523  00FF  0AA0               	incf	Init_SPI@just_one_slave,f
   524  0100  3001               	movlw	1
   525  0101  120A  118A  2080  120A  118A  	fcall	_Init_SPI
   526  0106                     l978:	
   527                           
   528                           ;Main_MASTER.c: 77:     Init_SPI_int();
   529  0106  120A  118A  212A  120A  118A  	fcall	_Init_SPI_int
   530                           
   531                           ;Main_MASTER.c: 78:     EUSART_Init(1,1);
   532  010B  1283               	bcf	3,5	;RP0=0, select bank0
   533  010C  1303               	bcf	3,6	;RP1=0, select bank0
   534  010D  01A0               	clrf	EUSART_Init@b
   535  010E  0AA0               	incf	EUSART_Init@b,f
   536  010F  3001               	movlw	1
   537  0110  120A  118A  20C0  120A  118A  	fcall	_EUSART_Init
   538  0115                     l980:	
   539                           
   540                           ;Main_MASTER.c: 79:     SSPBUF = 1;
   541  0115  3001               	movlw	1
   542  0116  1283               	bcf	3,5	;RP0=0, select bank0
   543  0117  1303               	bcf	3,6	;RP1=0, select bank0
   544  0118  0093               	movwf	19	;volatile
   545  0119                     l982:	
   546                           
   547                           ;Main_MASTER.c: 81:         PORTB = contador;
   548  0119  0874               	movf	_contador,w
   549  011A  0086               	movwf	6	;volatile
   550  011B  2919               	goto	l982
   551  011C  120A  118A  280E   	ljmp	start
   552  011F                     __end_of_main:	
   553                           
   554                           	psect	text1
   555  011F                     __ptext1:	
   556 ;; *************** function _Port_Init *****************
   557 ;; Defined at:
   558 ;;		line 85 in file "Main_MASTER.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;		None
   561 ;; Auto vars:     Size  Location     Type
   562 ;;		None
   563 ;; Return value:  Size  Location     Type
   564 ;;                  1    wreg      void 
   565 ;; Registers used:
   566 ;;		status,2
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         0       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0
   575 ;;      Totals:         0       0       0       0       0
   576 ;;Total ram usage:        0 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _Port_Init
   588  011F                     _Port_Init:	
   589  011F                     l940:	
   590                           ;incstack = 0
   591                           ; Regs used in _Port_Init: [status,2]
   592                           
   593                           
   594                           ;Main_MASTER.c: 86:     ANSEL = 0;
   595  011F  1683               	bsf	3,5	;RP0=1, select bank3
   596  0120  1703               	bsf	3,6	;RP1=1, select bank3
   597  0121  0188               	clrf	8	;volatile
   598                           
   599                           ;Main_MASTER.c: 87:     ANSELH = 0;
   600  0122  0189               	clrf	9	;volatile
   601                           
   602                           ;Main_MASTER.c: 88:     TRISB = 0;
   603  0123  1683               	bsf	3,5	;RP0=1, select bank1
   604  0124  1303               	bcf	3,6	;RP1=0, select bank1
   605  0125  0186               	clrf	6	;volatile
   606                           
   607                           ;Main_MASTER.c: 89:     PORTB = 0;
   608  0126  1283               	bcf	3,5	;RP0=0, select bank0
   609  0127  1303               	bcf	3,6	;RP1=0, select bank0
   610  0128  0186               	clrf	6	;volatile
   611  0129                     l62:	
   612  0129  0008               	return
   613  012A                     __end_of_Port_Init:	
   614                           
   615                           	psect	text2
   616  012A                     __ptext2:	
   617 ;; *************** function _Init_SPI_int *****************
   618 ;; Defined at:
   619 ;;		line 49 in file "../Lab4_SPI/Lib_SPI.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		None
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _Init_SPI_int
   649  012A                     _Init_SPI_int:	
   650  012A                     l960:	
   651                           ;incstack = 0
   652                           ; Regs used in _Init_SPI_int: []
   653                           
   654                           
   655                           ;../Lab4_SPI/Lib_SPI.c: 50:     INTCONbits.GIE = 1;
   656  012A  178B               	bsf	11,7	;volatile
   657                           
   658                           ;../Lab4_SPI/Lib_SPI.c: 51:     INTCONbits.PEIE = 1;
   659  012B  170B               	bsf	11,6	;volatile
   660                           
   661                           ;../Lab4_SPI/Lib_SPI.c: 52:     PIE1bits.SSPIE = 1;
   662  012C  1683               	bsf	3,5	;RP0=1, select bank1
   663  012D  1303               	bcf	3,6	;RP1=0, select bank1
   664  012E  158C               	bsf	12,3	;volatile
   665                           
   666                           ;../Lab4_SPI/Lib_SPI.c: 53:     PIR1bits.SSPIF = 0;
   667  012F  1283               	bcf	3,5	;RP0=0, select bank0
   668  0130  1303               	bcf	3,6	;RP1=0, select bank0
   669  0131  118C               	bcf	12,3	;volatile
   670  0132                     l88:	
   671  0132  0008               	return
   672  0133                     __end_of_Init_SPI_int:	
   673                           
   674                           	psect	text3
   675  0080                     __ptext3:	
   676 ;; *************** function _Init_SPI *****************
   677 ;; Defined at:
   678 ;;		line 15 in file "../Lab4_SPI/Lib_SPI.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  a               1    wreg     unsigned char 
   681 ;;  just_one_sla    1    0[BANK0 ] unsigned char 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  a               1    1[BANK0 ] unsigned char 
   684 ;; Return value:  Size  Location     Type
   685 ;;                  1    wreg      void 
   686 ;; Registers used:
   687 ;;		wreg, status,2, status,0
   688 ;; Tracked objects:
   689 ;;		On entry : 0/0
   690 ;;		On exit  : 0/0
   691 ;;		Unchanged: 0/0
   692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   693 ;;      Params:         0       1       0       0       0
   694 ;;      Locals:         0       1       0       0       0
   695 ;;      Temps:          0       0       0       0       0
   696 ;;      Totals:         0       2       0       0       0
   697 ;;Total ram usage:        2 bytes
   698 ;; Hardware stack levels used:    1
   699 ;; Hardware stack levels required when called:    1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           
   708                           ;psect for function _Init_SPI
   709  0080                     _Init_SPI:	
   710                           
   711                           ;incstack = 0
   712                           ; Regs used in _Init_SPI: [wreg+status,2+status,0]
   713                           ;Init_SPI@a stored from wreg
   714  0080  1283               	bcf	3,5	;RP0=0, select bank0
   715  0081  1303               	bcf	3,6	;RP1=0, select bank0
   716  0082  00A1               	movwf	Init_SPI@a
   717  0083                     l942:	
   718                           
   719                           ;../Lab4_SPI/Lib_SPI.c: 16:     TRISCbits.TRISC5 = 0;
   720  0083  1683               	bsf	3,5	;RP0=1, select bank1
   721  0084  1303               	bcf	3,6	;RP1=0, select bank1
   722  0085  1287               	bcf	7,5	;volatile
   723  0086                     l944:	
   724                           
   725                           ;../Lab4_SPI/Lib_SPI.c: 18:     if (a == 1){
   726  0086  1283               	bcf	3,5	;RP0=0, select bank0
   727  0087  1303               	bcf	3,6	;RP1=0, select bank0
   728  0088  0321               	decf	Init_SPI@a,w
   729  0089  1D03               	btfss	3,2
   730  008A  288C               	goto	u221
   731  008B  288D               	goto	u220
   732  008C                     u221:	
   733  008C  289B               	goto	l948
   734  008D                     u220:	
   735  008D                     l946:	
   736                           
   737                           ;../Lab4_SPI/Lib_SPI.c: 19:         TRISCbits.TRISC3 = 0;
   738  008D  1683               	bsf	3,5	;RP0=1, select bank1
   739  008E  1303               	bcf	3,6	;RP1=0, select bank1
   740  008F  1187               	bcf	7,3	;volatile
   741                           
   742                           ;../Lab4_SPI/Lib_SPI.c: 20:         SSPSTATbits.SMP = 0;
   743  0090  1394               	bcf	20,7	;volatile
   744                           
   745                           ;../Lab4_SPI/Lib_SPI.c: 21:         SSPSTATbits.CKE = 1;
   746  0091  1714               	bsf	20,6	;volatile
   747                           
   748                           ;../Lab4_SPI/Lib_SPI.c: 22:         SSPCONbits.SSPEN = 1;
   749  0092  1283               	bcf	3,5	;RP0=0, select bank0
   750  0093  1303               	bcf	3,6	;RP1=0, select bank0
   751  0094  1694               	bsf	20,5	;volatile
   752                           
   753                           ;../Lab4_SPI/Lib_SPI.c: 23:         SSPCONbits.CKP = 0;
   754  0095  1214               	bcf	20,4	;volatile
   755                           
   756                           ;../Lab4_SPI/Lib_SPI.c: 25:         SSPCONbits.SSPM0 = 0;
   757  0096  1014               	bcf	20,0	;volatile
   758                           
   759                           ;../Lab4_SPI/Lib_SPI.c: 26:         SSPCONbits.SSPM1 = 0;
   760  0097  1094               	bcf	20,1	;volatile
   761                           
   762                           ;../Lab4_SPI/Lib_SPI.c: 27:         SSPCONbits.SSPM2 = 0;
   763  0098  1114               	bcf	20,2	;volatile
   764                           
   765                           ;../Lab4_SPI/Lib_SPI.c: 28:         SSPCONbits.SSPM3 = 0;
   766  0099  1194               	bcf	20,3	;volatile
   767                           
   768                           ;../Lab4_SPI/Lib_SPI.c: 29:     }else if (a == 0){
   769  009A  28BF               	goto	l85
   770  009B                     l948:	
   771  009B  0821               	movf	Init_SPI@a,w
   772  009C  1D03               	btfss	3,2
   773  009D  289F               	goto	u231
   774  009E  28A0               	goto	u230
   775  009F                     u231:	
   776  009F  28BF               	goto	l85
   777  00A0                     u230:	
   778  00A0                     l950:	
   779                           
   780                           ;../Lab4_SPI/Lib_SPI.c: 30:         TRISCbits.TRISC3 = 1;
   781  00A0  1683               	bsf	3,5	;RP0=1, select bank1
   782  00A1  1303               	bcf	3,6	;RP1=0, select bank1
   783  00A2  1587               	bsf	7,3	;volatile
   784                           
   785                           ;../Lab4_SPI/Lib_SPI.c: 31:         SSPSTATbits.SMP = 0;
   786  00A3  1394               	bcf	20,7	;volatile
   787                           
   788                           ;../Lab4_SPI/Lib_SPI.c: 32:         SSPSTATbits.CKE = 1;
   789  00A4  1714               	bsf	20,6	;volatile
   790                           
   791                           ;../Lab4_SPI/Lib_SPI.c: 33:         SSPCONbits.SSPEN = 1;
   792  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   793  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   794  00A7  1694               	bsf	20,5	;volatile
   795                           
   796                           ;../Lab4_SPI/Lib_SPI.c: 34:         SSPCONbits.CKP = 0;
   797  00A8  1214               	bcf	20,4	;volatile
   798                           
   799                           ;../Lab4_SPI/Lib_SPI.c: 36:         SSPCONbits.SSPM1 = 0;
   800  00A9  1094               	bcf	20,1	;volatile
   801                           
   802                           ;../Lab4_SPI/Lib_SPI.c: 37:         SSPCONbits.SSPM2 = 1;
   803  00AA  1514               	bsf	20,2	;volatile
   804                           
   805                           ;../Lab4_SPI/Lib_SPI.c: 38:         SSPCONbits.SSPM3 = 0;
   806  00AB  1194               	bcf	20,3	;volatile
   807  00AC                     l952:	
   808                           
   809                           ;../Lab4_SPI/Lib_SPI.c: 39:         if (just_one_slave == 1){
   810  00AC  0320               	decf	Init_SPI@just_one_slave,w
   811  00AD  1D03               	btfss	3,2
   812  00AE  28B0               	goto	u241
   813  00AF  28B1               	goto	u240
   814  00B0                     u241:	
   815  00B0  28B3               	goto	l956
   816  00B1                     u240:	
   817  00B1                     l954:	
   818                           
   819                           ;../Lab4_SPI/Lib_SPI.c: 40:             SSPCONbits.SSPM0 = 1;
   820  00B1  1414               	bsf	20,0	;volatile
   821                           
   822                           ;../Lab4_SPI/Lib_SPI.c: 41:         }else if (just_one_slave == 0){
   823  00B2  28BF               	goto	l85
   824  00B3                     l956:	
   825  00B3  0820               	movf	Init_SPI@just_one_slave,w
   826  00B4  1D03               	btfss	3,2
   827  00B5  28B7               	goto	u251
   828  00B6  28B8               	goto	u250
   829  00B7                     u251:	
   830  00B7  28BF               	goto	l81
   831  00B8                     u250:	
   832  00B8                     l958:	
   833                           
   834                           ;../Lab4_SPI/Lib_SPI.c: 42:             TRISAbits.TRISA5 = 1;
   835  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   836  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   837  00BA  1685               	bsf	5,5	;volatile
   838                           
   839                           ;../Lab4_SPI/Lib_SPI.c: 43:             SSPCONbits.SSPM0 = 0;
   840  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   841  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   842  00BD  1014               	bcf	20,0	;volatile
   843  00BE  28BF               	goto	l85
   844  00BF                     l81:	
   845                           ;../Lab4_SPI/Lib_SPI.c: 46:     }
   846                           
   847  00BF                     l85:	
   848  00BF  0008               	return
   849  00C0                     __end_of_Init_SPI:	
   850                           
   851                           	psect	text4
   852  00C0                     __ptext4:	
   853 ;; *************** function _EUSART_Init *****************
   854 ;; Defined at:
   855 ;;		line 5 in file "../Digital2_LabLCD/Lib_EUSART.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  a               1    wreg     unsigned char 
   858 ;;  b               1    0[BANK0 ] unsigned char 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  a               1    1[BANK0 ] unsigned char 
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   870 ;;      Params:         0       1       0       0       0
   871 ;;      Locals:         0       1       0       0       0
   872 ;;      Temps:          0       0       0       0       0
   873 ;;      Totals:         0       2       0       0       0
   874 ;;Total ram usage:        2 bytes
   875 ;; Hardware stack levels used:    1
   876 ;; Hardware stack levels required when called:    1
   877 ;; This function calls:
   878 ;;		Nothing
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function _EUSART_Init
   886  00C0                     _EUSART_Init:	
   887                           
   888                           ;incstack = 0
   889                           ; Regs used in _EUSART_Init: [wreg+status,2+status,0]
   890                           ;EUSART_Init@a stored from wreg
   891  00C0  1283               	bcf	3,5	;RP0=0, select bank0
   892  00C1  1303               	bcf	3,6	;RP1=0, select bank0
   893  00C2  00A1               	movwf	EUSART_Init@a
   894  00C3                     l962:	
   895                           
   896                           ;../Digital2_LabLCD/Lib_EUSART.c: 7:     BAUDCTLbits.BRG16 = 0;
   897  00C3  1683               	bsf	3,5	;RP0=1, select bank3
   898  00C4  1703               	bsf	3,6	;RP1=1, select bank3
   899  00C5  1187               	bcf	7,3	;volatile
   900                           
   901                           ;../Digital2_LabLCD/Lib_EUSART.c: 8:     TXSTAbits.BRGH = 1;
   902  00C6  1683               	bsf	3,5	;RP0=1, select bank1
   903  00C7  1303               	bcf	3,6	;RP1=0, select bank1
   904  00C8  1518               	bsf	24,2	;volatile
   905                           
   906                           ;../Digital2_LabLCD/Lib_EUSART.c: 9:     TXSTAbits.SYNC = 0;
   907  00C9  1218               	bcf	24,4	;volatile
   908                           
   909                           ;../Digital2_LabLCD/Lib_EUSART.c: 10:     RCSTAbits.SPEN = 1;
   910  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   911  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   912  00CC  1798               	bsf	24,7	;volatile
   913                           
   914                           ;../Digital2_LabLCD/Lib_EUSART.c: 11:     TRISCbits.TRISC7 = 1;
   915  00CD  1683               	bsf	3,5	;RP0=1, select bank1
   916  00CE  1303               	bcf	3,6	;RP1=0, select bank1
   917  00CF  1787               	bsf	7,7	;volatile
   918  00D0                     l964:	
   919                           
   920                           ;../Digital2_LabLCD/Lib_EUSART.c: 12:     SPBRG = 25;
   921  00D0  3019               	movlw	25
   922  00D1  0099               	movwf	25	;volatile
   923  00D2                     l966:	
   924                           
   925                           ;../Digital2_LabLCD/Lib_EUSART.c: 13:     if (a==1){
   926  00D2  1283               	bcf	3,5	;RP0=0, select bank0
   927  00D3  1303               	bcf	3,6	;RP1=0, select bank0
   928  00D4  0321               	decf	EUSART_Init@a,w
   929  00D5  1D03               	btfss	3,2
   930  00D6  28D8               	goto	u261
   931  00D7  28D9               	goto	u260
   932  00D8                     u261:	
   933  00D8  28E1               	goto	l111
   934  00D9                     u260:	
   935  00D9                     l968:	
   936                           
   937                           ;../Digital2_LabLCD/Lib_EUSART.c: 14:         PIE1bits.RCIE = 1;
   938  00D9  1683               	bsf	3,5	;RP0=1, select bank1
   939  00DA  1303               	bcf	3,6	;RP1=0, select bank1
   940  00DB  168C               	bsf	12,5	;volatile
   941                           
   942                           ;../Digital2_LabLCD/Lib_EUSART.c: 15:         PIR1bits.RCIF = 0;
   943  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   944  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   945  00DE  128C               	bcf	12,5	;volatile
   946                           
   947                           ;../Digital2_LabLCD/Lib_EUSART.c: 16:         INTCONbits.GIE = 1;
   948  00DF  178B               	bsf	11,7	;volatile
   949                           
   950                           ;../Digital2_LabLCD/Lib_EUSART.c: 17:         INTCONbits.PEIE = 1;
   951  00E0  170B               	bsf	11,6	;volatile
   952  00E1                     l111:	
   953                           ;../Digital2_LabLCD/Lib_EUSART.c: 18:     }
   954                           
   955                           
   956                           ;../Digital2_LabLCD/Lib_EUSART.c: 19:     RCSTAbits.RX9D = 0;
   957  00E1  1018               	bcf	24,0	;volatile
   958                           
   959                           ;../Digital2_LabLCD/Lib_EUSART.c: 20:     RCSTAbits.CREN = 1;
   960  00E2  1618               	bsf	24,4	;volatile
   961                           
   962                           ;../Digital2_LabLCD/Lib_EUSART.c: 23:     TXSTAbits.TXEN = 1;
   963  00E3  1683               	bsf	3,5	;RP0=1, select bank1
   964  00E4  1303               	bcf	3,6	;RP1=0, select bank1
   965  00E5  1698               	bsf	24,5	;volatile
   966                           
   967                           ;../Digital2_LabLCD/Lib_EUSART.c: 24:     TRISCbits.TRISC6 = 0;
   968  00E6  1307               	bcf	7,6	;volatile
   969  00E7                     l970:	
   970                           
   971                           ;../Digital2_LabLCD/Lib_EUSART.c: 25:     if(b==1){
   972  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   973  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   974  00E9  0320               	decf	EUSART_Init@b,w
   975  00EA  1D03               	btfss	3,2
   976  00EB  28ED               	goto	u271
   977  00EC  28EE               	goto	u270
   978  00ED                     u271:	
   979  00ED  28F6               	goto	l113
   980  00EE                     u270:	
   981  00EE                     l972:	
   982                           
   983                           ;../Digital2_LabLCD/Lib_EUSART.c: 26:         PIE1bits.TXIE = 1;
   984  00EE  1683               	bsf	3,5	;RP0=1, select bank1
   985  00EF  1303               	bcf	3,6	;RP1=0, select bank1
   986  00F0  160C               	bsf	12,4	;volatile
   987                           
   988                           ;../Digital2_LabLCD/Lib_EUSART.c: 27:         PIR1bits.TXIF = 0;
   989  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   990  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   991  00F3  120C               	bcf	12,4	;volatile
   992                           
   993                           ;../Digital2_LabLCD/Lib_EUSART.c: 28:         INTCONbits.GIE = 1;
   994  00F4  178B               	bsf	11,7	;volatile
   995                           
   996                           ;../Digital2_LabLCD/Lib_EUSART.c: 29:         INTCONbits.PEIE = 1;
   997  00F5  170B               	bsf	11,6	;volatile
   998  00F6                     l113:	
   999  00F6  0008               	return
  1000  00F7                     __end_of_EUSART_Init:	
  1001                           
  1002                           	psect	text5
  1003  001A                     __ptext5:	
  1004 ;; *************** function _isr *****************
  1005 ;; Defined at:
  1006 ;;		line 36 in file "Main_MASTER.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1020 ;;      Params:         0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0
  1022 ;;      Temps:          5       0       0       0       0
  1023 ;;      Totals:         5       0       0       0       0
  1024 ;;Total ram usage:        5 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; This function calls:
  1027 ;;		Nothing
  1028 ;; This function is called by:
  1029 ;;		Interrupt level 1
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           
  1034                           ;psect for function _isr
  1035  001A                     _isr:	
  1036  001A                     i1l758:	
  1037                           
  1038                           ;Main_MASTER.c: 37:     if (PIR1bits.SSPIF == 1){
  1039  001A  1283               	bcf	3,5	;RP0=0, select bank0
  1040  001B  1303               	bcf	3,6	;RP1=0, select bank0
  1041  001C  1D8C               	btfss	12,3	;volatile
  1042  001D  281F               	goto	u7_21
  1043  001E  2820               	goto	u7_20
  1044  001F                     u7_21:	
  1045  001F  2835               	goto	i1l774
  1046  0020                     u7_20:	
  1047  0020                     i1l760:	
  1048                           
  1049                           ;Main_MASTER.c: 38:         PIR1bits.SSPIF = 0;
  1050  0020  118C               	bcf	12,3	;volatile
  1051  0021                     i1l762:	
  1052                           
  1053                           ;Main_MASTER.c: 39:         if (alternancia == 0){
  1054  0021  0871               	movf	_alternancia,w
  1055  0022  1D03               	btfss	3,2
  1056  0023  2825               	goto	u8_21
  1057  0024  2826               	goto	u8_20
  1058  0025                     u8_21:	
  1059  0025  282F               	goto	i1l768
  1060  0026                     u8_20:	
  1061  0026                     i1l764:	
  1062                           
  1063                           ;Main_MASTER.c: 40:             pot1 = SSPBUF;
  1064  0026  0813               	movf	19,w	;volatile
  1065  0027  00F5               	movwf	??_isr
  1066  0028  0875               	movf	??_isr,w
  1067  0029  00F3               	movwf	_pot1
  1068                           
  1069                           ;Main_MASTER.c: 41:             SSPBUF = 0x01;
  1070  002A  3001               	movlw	1
  1071  002B  0093               	movwf	19	;volatile
  1072  002C                     i1l766:	
  1073                           
  1074                           ;Main_MASTER.c: 42:             alternancia = 1;
  1075  002C  01F1               	clrf	_alternancia
  1076  002D  0AF1               	incf	_alternancia,f
  1077                           
  1078                           ;Main_MASTER.c: 43:         }else{
  1079  002E  2835               	goto	i1l774
  1080  002F                     i1l768:	
  1081                           
  1082                           ;Main_MASTER.c: 44:             pot2 = SSPBUF;
  1083  002F  0813               	movf	19,w	;volatile
  1084  0030  00F5               	movwf	??_isr
  1085  0031  0875               	movf	??_isr,w
  1086  0032  00F2               	movwf	_pot2
  1087  0033                     i1l770:	
  1088                           
  1089                           ;Main_MASTER.c: 45:             SSPBUF = 0x00;
  1090  0033  0193               	clrf	19	;volatile
  1091  0034                     i1l772:	
  1092                           
  1093                           ;Main_MASTER.c: 46:             alternancia = 0;
  1094  0034  01F1               	clrf	_alternancia
  1095  0035                     i1l774:	
  1096  0035  1E8C               	btfss	12,5	;volatile
  1097  0036  2838               	goto	u9_21
  1098  0037  2839               	goto	u9_20
  1099  0038                     u9_21:	
  1100  0038  283D               	goto	i1l778
  1101  0039                     u9_20:	
  1102  0039                     i1l776:	
  1103                           
  1104                           ;Main_MASTER.c: 49:         contador = RCREG;
  1105  0039  081A               	movf	26,w	;volatile
  1106  003A  00F5               	movwf	??_isr
  1107  003B  0875               	movf	??_isr,w
  1108  003C  00F4               	movwf	_contador
  1109  003D                     i1l778:	
  1110  003D  1E0C               	btfss	12,4	;volatile
  1111  003E  2840               	goto	u10_21
  1112  003F  2841               	goto	u10_20
  1113  0040                     u10_21:	
  1114  0040  2877               	goto	i1l51
  1115  0041                     u10_20:	
  1116  0041                     i1l780:	
  1117                           
  1118                           ;Main_MASTER.c: 51:         if (pot1 == 0x23){
  1119  0041  3023               	movlw	35
  1120  0042  0673               	xorwf	_pot1,w
  1121  0043  1D03               	btfss	3,2
  1122  0044  2846               	goto	u11_21
  1123  0045  2847               	goto	u11_20
  1124  0046                     u11_21:	
  1125  0046  284B               	goto	i1l784
  1126  0047                     u11_20:	
  1127  0047                     i1l782:	
  1128                           
  1129                           ;Main_MASTER.c: 52:             pot1 = 0x22;
  1130  0047  3022               	movlw	34
  1131  0048  00F5               	movwf	??_isr
  1132  0049  0875               	movf	??_isr,w
  1133  004A  00F3               	movwf	_pot1
  1134  004B                     i1l784:	
  1135  004B  3023               	movlw	35
  1136  004C  0672               	xorwf	_pot2,w
  1137  004D  1D03               	btfss	3,2
  1138  004E  2850               	goto	u12_21
  1139  004F  2851               	goto	u12_20
  1140  0050                     u12_21:	
  1141  0050  2864               	goto	i1l802
  1142  0051                     u12_20:	
  1143  0051                     i1l786:	
  1144                           
  1145                           ;Main_MASTER.c: 54:             pot2 = 0x22;
  1146  0051  3022               	movlw	34
  1147  0052  00F5               	movwf	??_isr
  1148  0053  0875               	movf	??_isr,w
  1149  0054  00F2               	movwf	_pot2
  1150  0055  2864               	goto	i1l802
  1151  0056                     i1l788:	
  1152                           
  1153                           ;Main_MASTER.c: 59:                 TXREG = pot1;
  1154  0056  0873               	movf	_pot1,w
  1155  0057  0099               	movwf	25	;volatile
  1156  0058                     i1l790:	
  1157                           
  1158                           ;Main_MASTER.c: 60:                 nodatotx++;
  1159  0058  3001               	movlw	1
  1160  0059  00F5               	movwf	??_isr
  1161  005A  0875               	movf	??_isr,w
  1162  005B  07F0               	addwf	_nodatotx,f
  1163                           
  1164                           ;Main_MASTER.c: 61:                 break;
  1165  005C  2877               	goto	i1l51
  1166  005D                     i1l792:	
  1167                           
  1168                           ;Main_MASTER.c: 63:                 TXREG = pot2;
  1169  005D  0872               	movf	_pot2,w
  1170  005E  0099               	movwf	25	;volatile
  1171  005F  2858               	goto	i1l790
  1172  0060                     i1l796:	
  1173                           
  1174                           ;Main_MASTER.c: 67:                 TXREG = 0x23;
  1175  0060  3023               	movlw	35
  1176  0061  0099               	movwf	25	;volatile
  1177  0062                     i1l798:	
  1178                           
  1179                           ;Main_MASTER.c: 68:                 nodatotx = 0;
  1180  0062  01F0               	clrf	_nodatotx
  1181                           
  1182                           ;Main_MASTER.c: 69:                 break;
  1183  0063  2877               	goto	i1l51
  1184  0064                     i1l802:	
  1185  0064  0870               	movf	_nodatotx,w
  1186  0065  00F5               	movwf	??_isr
  1187  0066  01F6               	clrf	??_isr+1
  1188                           
  1189                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1190                           ; Switch size 1, requested type "simple"
  1191                           ; Number of cases is 1, Range of values is 0 to 0
  1192                           ; switch strategies available:
  1193                           ; Name         Instructions Cycles
  1194                           ; simple_byte            4     3 (average)
  1195                           ; direct_byte           11     8 (fixed)
  1196                           ; jumptable            260     6 (fixed)
  1197                           ;	Chosen strategy is simple_byte
  1198  0067  0876               	movf	??_isr+1,w
  1199  0068  3A00               	xorlw	0	; case 0
  1200  0069  1903               	skipnz
  1201  006A  286C               	goto	i1l1014
  1202  006B  2877               	goto	i1l51
  1203  006C                     i1l1014:	
  1204                           
  1205                           ; Switch size 1, requested type "simple"
  1206                           ; Number of cases is 3, Range of values is 0 to 2
  1207                           ; switch strategies available:
  1208                           ; Name         Instructions Cycles
  1209                           ; simple_byte           10     6 (average)
  1210                           ; direct_byte           17     8 (fixed)
  1211                           ; jumptable            260     6 (fixed)
  1212                           ;	Chosen strategy is simple_byte
  1213  006C  0875               	movf	??_isr,w
  1214  006D  3A00               	xorlw	0	; case 0
  1215  006E  1903               	skipnz
  1216  006F  2856               	goto	i1l788
  1217  0070  3A01               	xorlw	1	; case 1
  1218  0071  1903               	skipnz
  1219  0072  285D               	goto	i1l792
  1220  0073  3A03               	xorlw	3	; case 2
  1221  0074  1903               	skipnz
  1222  0075  2860               	goto	i1l796
  1223  0076  2877               	goto	i1l51
  1224  0077                     i1l51:	
  1225  0077  0879               	movf	??_isr+4,w
  1226  0078  008A               	movwf	10
  1227  0079  0878               	movf	??_isr+3,w
  1228  007A  0084               	movwf	4
  1229  007B  0E77               	swapf	(??_isr+2)^(0+4294967168),w
  1230  007C  0083               	movwf	3
  1231  007D  0EFE               	swapf	btemp,f
  1232  007E  0E7E               	swapf	btemp,w
  1233  007F  0009               	retfie
  1234  0080                     __end_of_isr:	
  1235  007E                     btemp	set	126	;btemp
  1236  007E                     wtemp0	set	126
  1237                           
  1238                           	psect	intentry
  1239  0004                     __pintentry:	
  1240                           ;incstack = 0
  1241                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1242                           
  1243  0004                     interrupt_function:	
  1244  007E                     saved_w	set	btemp
  1245  0004  00FE               	movwf	btemp
  1246  0005  0E03               	swapf	3,w
  1247  0006  00F7               	movwf	??_isr+2
  1248  0007  0804               	movf	4,w
  1249  0008  00F8               	movwf	??_isr+3
  1250  0009  080A               	movf	10,w
  1251  000A  00F9               	movwf	??_isr+4
  1252  000B  120A  118A  281A   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_EUSART_Init
    _main->_Init_SPI

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     366
                        _EUSART_Init
                           _Init_SPI
                       _Init_SPI_int
                          _Port_Init
 ---------------------------------------------------------------------------------
 (1) _Port_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_SPI_int                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_SPI                                             2     1      1     214
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          2     1      1     152
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Init
   _Init_SPI
   _Init_SPI_int
   _Port_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 21 10:53:45 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l62 0129  
                      l81 00BF                        l85 00BF                        l88 0132  
                     l111 00E1                       l113 00F6                       l940 011F  
                     l950 00A0                       l942 0083                       l952 00AC  
                     l944 0086                       l960 012A                       l970 00E7  
                     l962 00C3                       l954 00B1                       l946 008D  
                     l972 00EE                       l964 00D0                       l956 00B3  
                     l948 009B                       l980 0115                       l966 00D2  
                     l958 00B8                       l982 0119                       l974 00F7  
                     l968 00D9                       l976 00FC                       l978 0106  
                     u220 008D                       u221 008C                       u230 00A0  
                     u231 009F                       u240 00B1                       u241 00B0  
                     u250 00B8                       u251 00B7                       u260 00D9  
                     u261 00D8                       u270 00EE                       u271 00ED  
            __CFG_CPD$OFF 0000                       _isr 001A                       fsr0 0004  
            ?_EUSART_Init 0020              __CFG_LVP$OFF 0000                      ?_isr 0075  
                    i1l51 0077                      u7_20 0020                      u7_21 001F  
                    u8_20 0026                      u8_21 0025                      u9_20 0039  
                    u9_21 0038              __CFG_WRT$OFF 0000                      _main 00F7  
                    _pot1 0073                      _pot2 0072             ?_Init_SPI_int 0075  
                    btemp 007E                      start 000E             __CFG_IESO$OFF 0000  
                   ??_isr 0075                     ?_main 0075             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l802 0064                     i1l760 0020  
                   i1l770 0033                     i1l762 0021                     i1l780 0041  
                   i1l772 0034                     i1l764 0026                     i1l790 0058  
                   i1l782 0047                     i1l766 002C                     i1l774 0035  
                   i1l758 001A                     i1l792 005D                     i1l784 004B  
                   i1l776 0039                     i1l768 002F                     i1l786 0051  
                   i1l778 003D                     i1l796 0060                     i1l788 0056  
                   i1l798 0062                     _RCREG 001A                     u10_20 0041  
                   u10_21 0040                     u11_20 0047                     u11_21 0046  
                   u12_20 0051                     u12_21 0050                     _SPBRG 0099  
                   _PORTB 0006                     _TRISB 0086                     _TXREG 0019  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
          ??_Init_SPI_int 0020                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 0011              __end_of_main 011F  
        __end_of_Init_SPI 00C0                    ??_main 0022                    _ANSELH 0189  
                  i1l1014 006C                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
            EUSART_Init@a 0021              EUSART_Init@b 0020        __size_of_Port_Init 000B  
                  saved_w 007E      __size_of_EUSART_Init 0037   __end_of__initialization 0016  
  Init_SPI@just_one_slave 0020            __pcstackCOMMON 0075      __end_of_Init_SPI_int 0133  
               ?_Init_SPI 0020         __end_of_Port_Init 012A                __pmaintext 00F7  
              __pintentry 0004                ??_Init_SPI 0021                   __ptext1 011F  
                 __ptext2 012A                   __ptext3 0080                   __ptext4 00C0  
                 __ptext5 001A              __size_of_isr 0066      end_of_initialization 0016  
               _RCSTAbits 0018     __size_of_Init_SPI_int 0009                 _TRISAbits 0085  
               _TRISCbits 0087                 Init_SPI@a 0021                 _TXSTAbits 0098  
            _Init_SPI_int 012A               _BAUDCTLbits 0187       start_initialization 0011  
             __end_of_isr 0080             ??_EUSART_Init 0021         __size_of_Init_SPI 0040  
__CFG_FOSC$INTRC_NOCLKOUT 0000                 _Port_Init 011F               __pbssCOMMON 0070  
               ___latbits 0002             __pcstackBANK0 0020       __end_of_EUSART_Init 00F7  
              ?_Port_Init 0075               _alternancia 0071         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C               _EUSART_Init 00C0  
                _Init_SPI 0080               ??_Port_Init 0020         __CFG_BOR4V$BOR40V 0000  
                _contador 0074             __size_of_main 0028                  _nodatotx 0070  
              _INTCONbits 000B                  intlevel1 0000                _SSPCONbits 0014  
